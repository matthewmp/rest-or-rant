{"version":3,"sources":["js/components/sections/SectionMgr.js","js/components/sections/Section.js","js/index.js"],"names":["SectionManager","sections","section","isSectionNameValid","sectionName","push","Error","newSectionName","trim","length","i","sectionManager","Object","freeze","Section","serverName","name","addNewSection","newServerName","sectionA","setServerName","sectionB","console","log"],"mappings":";;AEAA;;AACA;;;ADDA;ACGA,IAAImB,QAAQ,GAAG,IAAIL,gBAAJ,CAAY,GAAZ,CAAf;AACAK,QAAQ,CAACC,aAAT,CAAuB,MAAvB;AAEA,IAAIC,QAAQ,GAAG,IAAIP,gBAAJ,CAAY,GAAZ,CAAf;AACAQ,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBE,QAAtB;AACAC,OAAO,CAACC,GAAR,CAAYZ,mBAAZ;AFRA;IAEMX;;;AACF,ICDiBc,wBDCJ;AAAA;;ACAb,ADCI,QAAGd,WCDKI,GDCS,CAACH,OCDtB,CDCO,CCDiB,GDCU,IAA9B,EAAoC;ACDhB,ADEhB,WAAKA,QAAL,GAAgB,EAAhB;AACAD,MAAAA,cAAc,CAACC,QAAf,GAA0B,IAA1B;ACFJ,ADGC,SCHIG,WAAL,GAAmB,IAAnB;AACA,SAAKW,UAAL,GAAkB,IAAlB,CAFoB,CAIpB;ADCA,WAAOf,cAAc,CAACC,QAAtB;ACAA,ADCH,QCDSe,IAAI,GAAGZ,WAAW,CAACI,IAAZ,EAAb;;AAEA,QAAGG,oBAAeR,kBAAf,CAAkCa,IAAlC,CAAH,EAA2C;AACvC,WAAKZ,WAAL,GAAmBY,IAAnB;kCDAMd,SAAS;ACCfS,ADAJ,UAAG,KAAKR,WCAWc,ODAhB,CAAwBf,KCAvB,CAA6B,CDAC,CAACE,ECA/B,SDAD,CAAH,EAAgD;ACC/C,ADAG,KCHJ,MAIK,EDDIH,QAAL,CAAcI,IAAd,CAAmBH,OAAnB;ACEA,ADDH,OAFD,KCGU,CDDH,GCCOI,KAAJ,yBAA2BU,IAA3B,qBAAN;AACH,ADDG,cAAM,IAAIV,KAAJ,CAAU,wBAAV,CAAN;ACEP,ADDI;AAEJ;;;kCCCaU,KDCKZ,CCDC,YDCY;ACA5B,ADCA,UCDMc,ADCAX,aCDa,CDCC,ECDES,CDCCZ,GCDG,CAACI,IAAL,EAAtB,CDCkC,CAACA,IAAZ,EAAvB;;ACAA,ADCA,UCDGU,ADCA,KAAKjB,QCDR,ADCG,CAAcQ,CCDA,KDCd,KAAyB,CAA5B,EAA8B;ACA1B,ADCA,aCDKM,EDCE,IAAP,ICDA,GAAkBG,aAAlB;AACH,ADCA,OCHD,MAGK;AACD,cAAM,IAAIZ,KAAJ,CAAU,4BAAV,CAAN;AACH,ADDD,WAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKT,QAAL,CAAcQ,MAAjC,EAAyCC,CAAC,EAA1C,EAA6C;ACEhD,ADDO,YAAG,KAAKT,QAAL,CAAcS,CAAd,EAAiBN,WAAjB,IAAgCG,cAAnC,EAAkD;AAC9C,iBAAO,KAAP;AACH;AACJ;;AACD,aAAO,IAAP;AACH;;;uCAEiB;AACd,WAAKN,QAAL,CAAcQ,MAAd,GAAuB,CAAvB;AACH;;;;;;AAGL,IAAME,cAAc,GAAG,IAAIX,cAAJ,EAAvB;AACAY,MAAM,CAACC,MAAP,CAAcF,cAAd;eACeA","file":"js.00a46daa.js","sourceRoot":"../src","sourcesContent":["// Singleton pattern to manage all created sections\n\nclass SectionManager {\n    constructor(){\n        if(SectionManager.sections == null) {\n            this.sections = [];\n            SectionManager.sections = this;\n        }\n        return SectionManager.sections;\n    }\n\n    addNewSection(section) {\n        if(this.isSectionNameValid(section.sectionName)){\n            this.sections.push(section);\n        } else {\n            throw new Error('Duplicate Section Name');\n        }\n        \n    }\n\n    isSectionNameValid(sectionName) {\n        const newSectionName = sectionName.trim();\n        if(this.sections.length === 0){            \n            return true;\n        }\n        for(let i = 0; i < this.sections.length; i++){\n            if(this.sections[i].sectionName == newSectionName){\n                return false;\n            }\n        }\n        return true;\n    }\n\n    clearAllSections(){\n        this.sections.length = 0;\n    }\n}\n\nconst sectionManager = new SectionManager();\nObject.freeze(sectionManager);\nexport default sectionManager;","import sectionManager from './SectionMgr';\n\nexport default class Section {\n    constructor(sectionName){\n        this.sectionName = null;\n        this.serverName = null;\n\n        // Check for name availability\n        const name = sectionName.trim();\n\n        if(sectionManager.isSectionNameValid(name)){        \n            this.sectionName = name;\n            sectionManager.addNewSection(this);\n        }\n        else {\n            throw new Error(`Section Name: ${name} already in use`);\n        }\n    }\n\n    setServerName(name) {\n        const newServerName = name.trim();\n        if(newServerName){\n            this.serverName = newServerName;\n        }\n        else {\n            throw new Error('Please enter a valid name.');\n        }\n    }\n}","import Section from './components/sections/Section';\nimport sectionManager from './components/sections/SectionMgr';\n\nlet sectionA = new Section('A');\nsectionA.setServerName('Matt');\n\nlet sectionB = new Section('B');\nconsole.log(sectionA, sectionB);\nconsole.log(sectionManager)"]}